{"version":3,"sources":["components/detailPages/PlaneSeat.js","components/detailPages/PlaneGridLegend.js","components/UI/Modal.js","components/detailPages/PlaneGrid.js","components/detailPages/FlightDetails.js","components/pages/FlightDetailsPage.js"],"names":["PlaneSeat","className","children","onCheckIn","id","checkInNeeded","passCheckIn","classes","onClick","undo","toString","PlaneGridLegend","props","Backdrop","onClose","Overlay","passengerName","ID","onConfirmCheckIn","onUndoCheckIn","passCheckedIn","type","portalElement","document","getElementById","Modal","checkInID","ReactDOM","createPortal","PlaneGrid","flightDetails","selectedPassengerData","useState","showModal","setShowModal","setCheckInID","setPassCheckedIn","useEffect","seat","dispatch","useDispatch","showCheckInModalHandler","assignClass","data","notAvailable","passengers","find","passenger","specServ","INF","WCH","specMeal","SPEC","infant","wheelchair","specialMeal","row1","seatsRow1","row2","seatsRow2","map","row","i","number","number1","flightActions","passengerCheckIn","undoCheckIn","useStyles","makeStyles","table","width","table__container","position","left","top","minWidth","height","minHeight","boxShadow","padding","display","flexDirection","title","fontWeight","span","color","FlightDetails","flightNumber","passName","option","location","useLocation","state","useSelector","flight","flights","filter","pass","name","rows1","plane","DEP","ARR","DEP_time","ARR_time","tittleContent","style","TableContainer","component","Paper","Table","TableHead","TableRow","TableCell","align","TableBody","scope","a","FlightDetailsPage","flightOption","setFlightOption","setCheckInNeeded","showTable","showNavTable","FormData","Fragment","showNavTableActions","hideTable"],"mappings":"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","file":"static/js/6.6ee92011.chunk.js","sourcesContent":["import \"../../styles/PlaneSeat.scss\";\r\n\r\nconst PlaneSeat = ({\r\n  className,\r\n  children,\r\n  onCheckIn,\r\n  id,\r\n  checkInNeeded,\r\n  passCheckIn,\r\n}) => {\r\n  const classes = `grid__seat ${className}`;\r\n\r\n  const checkInHandler = () => {\r\n    const undo = id.toString() === passCheckIn.toString() && true;\r\n\r\n    if (checkInNeeded) {\r\n      if (\r\n        (className === \"available\" && !passCheckIn) ||\r\n        (className === \"notAvailable\" && passCheckIn && undo) ||\r\n        (className === \"infant\" && passCheckIn && undo) ||\r\n        (className === \"wheelchair\" && passCheckIn && undo)\r\n      )\r\n        onCheckIn(id);\r\n    } else return;\r\n  };\r\n\r\n  return (\r\n    <div className={classes} onClick={checkInHandler}>\r\n      {children}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PlaneSeat;\r\n","import \"../../styles/PlaneGridLegend.scss\";\r\n\r\nconst PlaneGridLegend = (props) => {\r\n  return (\r\n    <div className=\"grid__legend_container\">\r\n      <div className=\"grid__legend_item\">\r\n        <div></div>\r\n        <span> - seat available</span>\r\n      </div>\r\n      <div className=\"grid__legend_item\">\r\n        <div></div>\r\n        <span> - seat not available</span>\r\n      </div>\r\n      <div className=\"grid__legend_item\">\r\n        <div></div>\r\n        <span> - seat for a passenger with infant</span>\r\n      </div>\r\n      <div className=\"grid__legend_item\">\r\n        <div></div>\r\n        <span> - seat for a passenger with wheelchair</span>\r\n      </div>\r\n      <div className=\"grid__legend_item\">\r\n        <div></div>\r\n        <span> - seat for a passenger with special meal</span>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PlaneGridLegend;\r\n","import { Fragment } from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\n\r\nimport \"../../styles/Modal.scss\";\r\nimport \"../../index.scss\";\r\n\r\nconst Backdrop = ({ onClose }) => {\r\n  return <div className=\"backdrop\" onClick={onClose}></div>;\r\n};\r\n\r\nconst Overlay = ({\r\n  passengerName,\r\n  ID,\r\n  onClose,\r\n  onConfirmCheckIn,\r\n  onUndoCheckIn,\r\n  passCheckedIn,\r\n}) => {\r\n  return (\r\n    <div className=\"overlay\">\r\n      {!passCheckedIn && (\r\n        <h2>\r\n          {\" \"}\r\n          Are you sure you want to check in/change place for{\" \"}\r\n          <span>{passengerName}</span> for seat number: <span>{ID}</span> ?\r\n        </h2>\r\n      )}\r\n      {passCheckedIn && (\r\n        <h2>\r\n          {\" \"}\r\n          Are you sure you want to undo check in passenger{\" \"}\r\n          <span>{passengerName}</span> from seat number: <span>{ID}</span> ?\r\n        </h2>\r\n      )}\r\n\r\n      <div className=\"button__actions\">\r\n        <button type=\"button\" onClick={onClose}>\r\n          Close\r\n        </button>\r\n        {!passCheckedIn && (\r\n          <button className=\"submit\" onClick={onConfirmCheckIn}>\r\n            Confirm\r\n          </button>\r\n        )}\r\n        {passCheckedIn && (\r\n          <button className=\"submit\" onClick={onUndoCheckIn}>\r\n            Undo Check in\r\n          </button>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst portalElement = document.getElementById(\"overlays\");\r\n\r\nconst Modal = ({\r\n  passengerName,\r\n  checkInID,\r\n  onClose,\r\n  onConfirmCheckIn,\r\n  onUndoCheckIn,\r\n  passCheckedIn,\r\n}) => {\r\n  return (\r\n    <Fragment>\r\n      {ReactDOM.createPortal(<Backdrop onClose={onClose} />, portalElement)}\r\n      {ReactDOM.createPortal(\r\n        <Overlay\r\n          passengerName={passengerName}\r\n          ID={checkInID}\r\n          onClose={onClose}\r\n          onConfirmCheckIn={onConfirmCheckIn}\r\n          passCheckedIn={passCheckedIn}\r\n          onUndoCheckIn={onUndoCheckIn}\r\n        />,\r\n        portalElement\r\n      )}\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default Modal;\r\n","import { useEffect, useState, Fragment } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\n\r\nimport PlaneSeat from \"./PlaneSeat\";\r\nimport PlaneGridLegend from \"./PlaneGridLegend\";\r\n\r\nimport Modal from \"../UI/Modal\";\r\n\r\nimport \"../../styles/PlaneGrid.scss\";\r\n\r\nimport { flightActions } from \"../../store/flight-slice\";\r\n\r\nconst PlaneGrid = ({\r\n  flightDetails,\r\n  passengerName,\r\n  selectedPassengerData,\r\n  checkInNeeded,\r\n}) => {\r\n  const [showModal, setShowModal] = useState(false);\r\n  const [checkInID, setCheckInID] = useState(\"\");\r\n  const [passCheckedIn, setPassCheckedIn] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    if (checkInNeeded) {\r\n      if (selectedPassengerData.seat)\r\n        setPassCheckedIn(selectedPassengerData.seat);\r\n    }\r\n  }, [selectedPassengerData, checkInNeeded]);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const showCheckInModalHandler = (id) => {\r\n    setCheckInID(id);\r\n    setShowModal(true);\r\n  };\r\n\r\n  const closeModalHandler = () => {\r\n    setShowModal(false);\r\n  };\r\n\r\n  const confirmCheckInChangePlaceHandler = () => {\r\n    dispatch(\r\n      flightActions.passengerCheckIn({\r\n        checkInID,\r\n        passengerName,\r\n        flightDetails,\r\n      })\r\n    );\r\n    setShowModal(false);\r\n    setPassCheckedIn(checkInID);\r\n  };\r\n\r\n  const confirmUndoCheckInHandler = () => {\r\n    dispatch(\r\n      flightActions.undoCheckIn({\r\n        passengerName,\r\n        flightDetails,\r\n      })\r\n    );\r\n    setShowModal(false);\r\n    setPassCheckedIn(\"\");\r\n  };\r\n\r\n  const assignClass = (data) => {\r\n    let newPassengerNotAvailable;\r\n    let newPassengerInfant;\r\n    let newPassengerWheelchair;\r\n    let newPassengerSpecialMeal;\r\n\r\n    const notAvailable = passengers.find(\r\n      (passenger) =>\r\n        passenger.seat === data.toString() &&\r\n        !passenger.specServ.INF &&\r\n        !passenger.specServ.WCH &&\r\n        !passenger.specMeal.SPEC\r\n    );\r\n    if (notAvailable) {\r\n      newPassengerNotAvailable = {\r\n        ...notAvailable,\r\n        className: \"notAvailable\",\r\n      };\r\n      return newPassengerNotAvailable.className;\r\n    }\r\n    const infant = passengers.find(\r\n      (passenger) =>\r\n        passenger.seat === data.toString() && passenger.specServ.INF\r\n    );\r\n    if (infant) {\r\n      newPassengerInfant = { ...infant, className: \"infant\" };\r\n      return newPassengerInfant.className;\r\n    }\r\n    const wheelchair = passengers.find(\r\n      (passenger) =>\r\n        passenger.seat === data.toString() && passenger.specServ.WCH\r\n    );\r\n    if (wheelchair) {\r\n      newPassengerWheelchair = { ...wheelchair, className: \"wheelchair\" };\r\n      return newPassengerWheelchair.className;\r\n    }\r\n    const specialMeal = passengers.find(\r\n      (passenger) =>\r\n        passenger.seat === data.toString() && passenger.specMeal.SPEC\r\n    );\r\n    if (specialMeal) {\r\n      newPassengerSpecialMeal = { ...specialMeal, className: \"specialMeal\" };\r\n      return newPassengerSpecialMeal.className;\r\n    }\r\n    if ((!notAvailable, !infant, !wheelchair, !specialMeal)) return \"available\";\r\n  };\r\n\r\n  const row1 = flightDetails[0].seatsRow1;\r\n  const row2 = flightDetails[0].seatsRow2;\r\n  const passengers = flightDetails[0].passengers;\r\n\r\n  const seatsRow1 = row1.map((row, i) => {\r\n    let number = i + 1;\r\n    const className = assignClass(number);\r\n    return (\r\n      <PlaneSeat\r\n        key={number}\r\n        id={number}\r\n        className={className}\r\n        onCheckIn={showCheckInModalHandler}\r\n        checkInNeeded={checkInNeeded}\r\n        passCheckIn={passCheckedIn}\r\n      >\r\n        {number}\r\n      </PlaneSeat>\r\n    );\r\n  });\r\n\r\n  const seatsRow2 = row2.map((row, i) => {\r\n    let number = row2[0];\r\n    let number1 = number + i;\r\n    const className = assignClass(number1);\r\n    return (\r\n      <PlaneSeat\r\n        key={number1}\r\n        id={number1}\r\n        className={className}\r\n        onCheckIn={showCheckInModalHandler}\r\n        checkInNeeded={checkInNeeded}\r\n        passCheckIn={passCheckedIn}\r\n      >\r\n        {number1}\r\n      </PlaneSeat>\r\n    );\r\n  });\r\n\r\n  const content = (\r\n    <Fragment>\r\n      {showModal && (\r\n        <Modal\r\n          passengerName={passengerName}\r\n          checkInID={checkInID}\r\n          onClose={closeModalHandler}\r\n          onConfirmCheckIn={confirmCheckInChangePlaceHandler}\r\n          onUndoCheckIn={confirmUndoCheckInHandler}\r\n          passCheckedIn={passCheckedIn}\r\n        />\r\n      )}\r\n      <div className=\"grid__control\">\r\n        <div className=\"grid__container\">\r\n          <p>Plane Front</p>\r\n          <div className=\"grid__seats\">\r\n            <div className=\"grid__seats_row\">{seatsRow1}</div>\r\n            <p>Walking Path</p>\r\n            <div className=\"grid__seats_row\">{seatsRow2}</div>\r\n          </div>\r\n        </div>\r\n        <PlaneGridLegend />\r\n      </div>\r\n    </Fragment>\r\n  );\r\n\r\n  return content;\r\n};\r\n\r\nexport default PlaneGrid;\r\n","import React from \"react\";\r\nimport { useLocation } from \"react-router-dom\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableContainer from \"@material-ui/core/TableContainer\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\n\r\nimport PlaneGrid from \"./PlaneGrid\";\r\n\r\nimport { useSelector } from \"react-redux\";\r\n\r\nconst useStyles = makeStyles({\r\n  table: {\r\n    width: 750,\r\n  },\r\n  table__container: {\r\n    position: \"absolute\",\r\n    left: \"2%\",\r\n    top: \"2%\",\r\n    width: \"96%\",\r\n    minWidth: \"20vw\",\r\n    height: \"96%\",\r\n    minHeight: \"10%\",\r\n    boxShadow: \"0 2px 8px rgba(0, 0, 0, 0.5)\",\r\n    padding: \"2rem\",\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n  },\r\n  title: {\r\n    fontWeight: \"bold\",\r\n  },\r\n  span: {\r\n    color: \"red\",\r\n    fontWeight: \"bold\",\r\n  },\r\n});\r\n\r\nexport default function FlightDetails({\r\n  option,\r\n  passengerName,\r\n  checkInNeeded,\r\n}) {\r\n  const location = useLocation();\r\n\r\n  let flightNumber;\r\n  let passName;\r\n\r\n  if (location.state) {\r\n    flightNumber = location.state.option;\r\n    passName = location.state.passengerName;\r\n  }\r\n  if (location.state === null) {\r\n    flightNumber = option;\r\n    passName = passengerName;\r\n  }\r\n\r\n  const classes = useStyles();\r\n\r\n  const flightData = useSelector((state) => state.flight.flights);\r\n  const flightDetails = flightData.filter(\r\n    (data) => data.number === flightNumber\r\n  );\r\n\r\n  const passengers = flightDetails[0].passengers;\r\n\r\n  const selectedPassengerData = passengers.find(\r\n    (pass) => pass.name === passName\r\n  );\r\n\r\n  function createData(number, plane, DEP, ARR, DEP_time, ARR_time) {\r\n    return { number, plane, DEP, ARR, DEP_time, ARR_time };\r\n  }\r\n\r\n  const rows1 = flightDetails.map((row) =>\r\n    createData(\r\n      row.number,\r\n      row.data.plane,\r\n      row.data.DEP,\r\n      row.data.ARR,\r\n      row.data.DEP_time,\r\n      row.data.ARR_time\r\n    )\r\n  );\r\n\r\n  const tittleContent = checkInNeeded ? (\r\n    <h2>\r\n      {\" \"}\r\n      Check in panel for a passenger : {passName}, checked in with seat number :{\" \"}\r\n      {selectedPassengerData.seat ? (\r\n        selectedPassengerData.seat\r\n      ) : (\r\n        <span style={{ color: \"red\" }}>not checked in yet</span>\r\n      )}\r\n    </h2>\r\n  ) : (\r\n    <h2> Flight details for a flight number : {flightDetails[0].number} </h2>\r\n  );\r\n\r\n  return (\r\n    <TableContainer component={Paper} className={classes.table__container}>\r\n      <div className=\"aside__tittle\">{tittleContent}</div>\r\n      <Table className={classes.table} aria-label=\"simple table\">\r\n        <TableHead>\r\n          <TableRow>\r\n            <TableCell className={classes.title} align=\"center\">\r\n              Flight Number\r\n            </TableCell>\r\n            <TableCell className={classes.title} align=\"center\">\r\n              Plane\r\n            </TableCell>\r\n            <TableCell className={classes.title} align=\"center\">\r\n              Departure\r\n            </TableCell>\r\n            <TableCell className={classes.title} align=\"center\">\r\n              Arrival\r\n            </TableCell>\r\n            <TableCell className={classes.title} align=\"center\">\r\n              Departure time\r\n            </TableCell>\r\n            <TableCell className={classes.title} align=\"center\">\r\n              Arrival time\r\n            </TableCell>\r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody>\r\n          {rows1.map((row) => (\r\n            <TableRow key={row.number}>\r\n              <TableCell component=\"th\" scope=\"row\" align=\"center\">\r\n                {row.number}\r\n              </TableCell>\r\n              <TableCell className={classes.a} align=\"center\">\r\n                {row.plane}\r\n              </TableCell>\r\n              <TableCell align=\"center\">{row.DEP}</TableCell>\r\n              <TableCell align=\"center\">{row.ARR}</TableCell>\r\n              <TableCell align=\"center\">{row.DEP_time}</TableCell>\r\n              <TableCell align=\"center\">{row.ARR_time}</TableCell>\r\n            </TableRow>\r\n          ))}\r\n        </TableBody>\r\n      </Table>\r\n      <PlaneGrid\r\n        flightDetails={flightDetails}\r\n        passengerName={passName}\r\n        checkInNeeded={checkInNeeded}\r\n        selectedPassengerData={selectedPassengerData}\r\n      />\r\n    </TableContainer>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { FormData } from \"../../formData\";\r\n\r\nimport PageForm from \"../styled-components/PageForm\";\r\n\r\nimport { showNavTableActions } from \"../../store/showNavTable-slice\";\r\n\r\nimport Card from \"../UI/Card\";\r\n\r\nimport FlightDetails from \"../detailPages/FlightDetails\";\r\n\r\nconst id = 2;\r\n\r\nconst FlightDetailsPage = () => {\r\n  const [flightOption, setFlightOption] = useState(\"\");\r\n  const [checkInNeeded, setCheckInNeeded] = useState(true);\r\n\r\n  const showTable = useSelector((state) => state.showNavTable.showTable);\r\n  const dispatch = useDispatch();\r\n\r\n  const formInfo = FormData.find((data) => data.id === id);\r\n  const data = formInfo;\r\n\r\n  const showTableHandler = (data) => {\r\n    dispatch(showNavTableActions.hideTable());\r\n    setFlightOption(data);\r\n    setCheckInNeeded(false);\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      {showTable && (\r\n        <Card className=\"form\">\r\n          <PageForm\r\n            id={data.id}\r\n            title={data.title}\r\n            onClick={showTableHandler}\r\n          />\r\n        </Card>\r\n      )}\r\n      {!showTable && (\r\n        <FlightDetails option={flightOption} checkInNeeded={checkInNeeded} />\r\n      )}\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default FlightDetailsPage;\r\n"],"sourceRoot":""}